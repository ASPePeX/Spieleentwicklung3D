<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><style>td {vertical-align:top; font-family:arial; font-size:small; background:#eeeeee}</style>
</head><body><table border="0" cellpadding="2" cellspacing="0" height="100%" width="100%">
<!--?php /*  */ ?-->
	<tbody><tr>
		<td><b>Aufgabe 9</b>: Ihre Figuren sollen Fußball spielen! Bringen Sie
 einen Ball ins Spiel und parametrieren Sie die Spielobjekte 
entsprechend. Gerne können Sie weitere Tastaturdrücke auswerten, um den 
Abschuss bei Collision und damit die Flugbahn des Balls zu beeinflussen.</td>
	</tr>
	<tr>
		<td><b>Aufgabe 8</b>: Zufällig werden Items beim Start des Programms 
als Kinder eines Sammelobjektes verteilt. Die Spielfiguren können diese 
per Trigger-Kollision aufsammeln. Hinweis: für die Kollision muss eine 
Rigidbody-Komponente am bewegten Objekt hängen. Diese als kinematisch 
definieren und ggf. mit Masse 0 und ohne Gravitation. Siehe: 
CollisionActionMatrix unter <a href="http://unity3d.com/support/documentation/Manual/Physics.html" target="_blank">Physics</a></td>
	</tr>
	<tr><td><b>Aufgabe 7</b>: Es sind mehrere Figuren in der Szene, als 
Prefabs im Editor an die Position gezogen, im Idealfall ohne weiteres 
dazutun. Bei Klick auf eine Figur wird diese per Tastatur gesteuert und 
die Kamera hängt sich daran.</td>
	</tr>
	<tr>
		<td><b>Aufgabe 6</b>: Es wird eine kleine Physiksimulation integriert,
 ohne die Physikengine von Unity bemühen zu müssen. Die Figur fällt 
ständig mit steigender Geschwindigkeit, bis der Raycast Boden oberhalb 
der Fußlinie erkennt. In diesem Fall wird die Figur auf den Boden 
gestellt, wodurch sie auf Hindernisse steigen kann.</td>
	</tr><tr>
		<td><a href="http://webuser.hs-furtwangen.de/%7Edel/Spieleentwicklung3D/S12/A5/WebPlayer.html" target="_blank"><b>Aufgabe 5</b></a>:
 Das Kamerascript verarbeitet Tastaturkommandos und leitet sie an die 
Figur weiter. Die Figur wird somit über das Keyboard gesteuert. Beim 
Sprung wird die Bewegungsrichtung und -geschwindigkeit des Sprungbeginns
 beibehalten.</td>
	</tr>
	<tr>
		<td><a href="http://webuser.hs-furtwangen.de/%7Edel/Spieleentwicklung3D/S12/A4/WebPlayer.html" target="_blank"><b>Aufgabe 4</b></a>:
 Eine Dolly-3rd-Person-Kamera wandert mit der Figur, fokussiert auf den 
Kopf. Mausgesteuert wird die Kamera bewegt, horizontale Rotation ohne 
Limit, vertikal limitiert auf Winkel vor dem unteren und oberen Zenit. 
Per Mausrad wird der Abstand zum Ziel zwischen festgelegten Grenzen 
eingestellt. Die Objektbeziehung Kamera-Figur wird zur Laufzeit 
hergestellt, sie sind nicht hierarchisch gekoppelt.</td>
	</tr>
	<tr>
		<td><a href="http://webuser.hs-furtwangen.de/%7Edel/Spieleentwicklung3D/S12/A3/WebPlayer.html" target="_blank"><b>Aufgabe 3</b></a>:
 Die Figur wechselt zufallsgesteuert die Animationen. Der Wechsel findet
 aufgrund des Aufrufes durch ein Animationevent am Ende der gerade 
laufenden statt. Beim Laufen und Springen bewegt sich die Figur vorwärts
 durch die Szene, bei "Idle" steht sie. Eine fest positionierte Kamera 
wird per LookAt auf die Figur ausgerichtet.</td>
	</tr>
	<tr>
		<td><b>Aufgabe 2</b>: Auf Basis einer intelligent zusammengesetzten 
Hierarchie primitver Grundkörper wird eine Spielfigur entwickelt und 
animiert. Animationen sind Walk, Jump und Idle ohne Transformation durch
 den Raum. Bezugspunkt der Figur ist deren Standpunkt, sie wird als 
Prefab abgelegt. </td>
	</tr>
	<tr>
		<td><b>Aufgabe 1</b>: Eine kleine, freie Animation mit primitiven 
Objekten und dem Unity-Animationswerkzeug. Geübt werden soll die 
Fingerfertigkeit im Umgang damit und die Orientierung in der IDE und im 
Raum. </td>
	</tr>
  <tr>
	<td>
	Liebe Teilnehmer,
	registriert euch auf dieser Seite indem ihr den Mustersteckbrief ladet,
 modifiziert und auf eurem eigenen Webspace am besten in einem Ordner 
namens "Spiele2D" mit eurem Portrait ablegt. Dann auf "Register Karte" 
klicken und neben den anderen Daten den Pfad auf den Ordner angeben.
	</td>
  </tr>
</tbody></table></body></html>